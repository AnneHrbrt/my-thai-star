:toc: macro
toc::[]

= Two-Factor Authentication

Two-factor Authentication (2FA) provides an additional level of security to your account. Once enabled, in addition to supplying your username and password to login, youâ€™ll be prompted for a code generated by your Google authenticator. For example, a password manager on one of your devices.

By enabling 2FA, the only way someone other than you can log into your account is to know your username and password and have access to your one time password.

=== Backend mechanism
In the backend, we utilize Spring Security for any authentication.
Following the arrows, one can see all processes regarding authentication. The main idea is to check all credentials depending on their 2FA status and then either grand access to the specific user or deny access. This picture illustrates a normal authentication with username and password.

image::images/security/security_cross_component.png[, ]

When dealing with 2FA, another provider and filter is handling the request from */verify*

image::images/security/security_cross_component_twofactor.png[, ]

Here you can observe which filter will be used.
*JWTAuthenticationFilter* does intercept any request, which enforces being authenticated via JWT

image::images/security/filters_png.png[, ]


=== Activating Two-Factor Authentication

In the current state, https://en.wikipedia.org/wiki/Time-based_One-time_Password_algorithm[TOTP] 
will be used for OTP generation. For this purpose we recommend the *Google Authenticator* or any TOTP generator out there.

* Login with your account
* Open the 2FA settings
* Activate the 2FA Status
* Initialize your device with either a *QR-Code* or a *secret*

=== Frontend

image::images/security/2FA_qr_code_menu.png[, ]

image::images/security/2FA_secret_menu.png[, ]

image::images/security/otp_prompt.png[, ]