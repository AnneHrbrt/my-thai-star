pipeline{
    agent any

    options {
        buildDiscarder(logRotator(artifactDaysToKeepStr: '1', artifactNumToKeepStr: '1', daysToKeepStr: '5', numToKeepStr: '50'))
        // Disable concurrent builds. It will wait until the pipeline finish before start a new one
        disableConcurrentBuilds()
    }

    environment {
        containerPort = 8090
        sshAgentCredentials = '3d0fa2a4-5cf0-4cf5-a3fd-23655eb33c11'
        artifactId = 'mythaistar-restaurant'

        groupId = 'com/devonfw/mythaistar/mythaistar-restaurant/'
        repositoryId = 'devon.snapshots'
        repositoryUrl = 'http://nexus3-core:8081/nexus3/repository/releases/'
    }

    parameters {
        string(name: 'VERSION', defaultValue: '1.12.0', description: 'Version number (without -SNAPSHOT)') 
        string(name: 'EXTERNAL_SERVER_IP', defaultValue: '10.40.235.244', description: 'Server IP') 
    }

    stages {
        stage ('Download artifact from Nexus') {
            steps {
                script {
                    sh """wget ${repositoryUrl}${groupId}${params.VERSION}/${artifactId}-${params.VERSION}.zip --content-disposition"""
                    sh "mkdir -p dist"
                    unzip dir: 'dist', zipFile: """${artifactId}-${params.VERSION}.zip"""                    
                }
            }
        }
        
        stage ('Deployment') {
            steps {
                script {
                    dir('dist'){
                        sshagent (credentials: [sshAgentCredentials]) {
                            sh """
                                # Copy resulting "dist" folder from workspace to deployment server
                                scp -o StrictHostKeyChecking=no -r dist root@${params.EXTERNAL_SERVER_IP}:/root/mythaistar/angular/
                                
                                # Launch application in Docker container
                                ssh -o StrictHostKeyChecking=no root@${params.EXTERNAL_SERVER_IP} docker rm -f mts-angular
                                ssh -o StrictHostKeyChecking=no root@${params.EXTERNAL_SERVER_IP} docker run -itd --name=mts-angular -p ${containerPort}:80 cbelda/nginx-try-files
                                ssh -o StrictHostKeyChecking=no root@${params.EXTERNAL_SERVER_IP} docker exec mts-angular bash -c \\"rm /usr/share/nginx/html/*\\"
                                ssh -o StrictHostKeyChecking=no root@${params.EXTERNAL_SERVER_IP} docker cp mythaistar/angular/dist/. mts-angular:/usr/share/nginx/html/
                            """
                            echo "Your app is available in http://${params.EXTERNAL_SERVER_IP}:${containerPort}"
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}